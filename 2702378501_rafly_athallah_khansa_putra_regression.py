# -*- coding: utf-8 -*-
"""2702378501-Rafly Athallah Khansa Putra-Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1X-KPJBRduKE4_EILUox725mmRH09N1X4

**Use direct inverse method**
"""

import numpy as np
from scipy import optimize
import matplotlib.pyplot as plt

plt.style.use('seaborn-poster')

x = np.linspace(0, 1, 101)
y = 1 + x + x * np.random.random(len(x))

A = np.vstack([x, np.ones(len(x))]).T

y = y[:, np.newaxis]

alpha = np.dot((np.dot(np.linalg.inv(np.dot(A.T,A)),A.T)),y)
print(alpha)

"""**Use the pseudoinverse**"""

pinv = np.linalg.pinv(A)
alpha = pinv.dot(y)
print(alpha)

"""**Use numpy.linalg.lstsq**"""

alpha = np.linalg.lstsq(A, y, rcond=None)[0]
print(alpha)

"""**Use optimize.curve_fit from scipy**"""

x = np.linspace(0, 1, 101)
y = 1 + x + x * np.random.random(len(x))

def func(x, a, b):
  y = a*x + b
  return y

alpha =  optimize.curve_fit(func, xdata = x, ydata = y)[0]
print(alpha)